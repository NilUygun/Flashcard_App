/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.flashcards;

import java.awt.Color;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JTextArea;

/**
 *
 * @author uygun
 */
public class WriteTest extends javax.swing.JFrame {

    /**
     * Creates new form writeTest
     */
    
    private ArrayList<String[]> wordsList;
    private int score;
    private int totalNumOfQuest;
    private int numOfWrite;
    private String[][] writeWordsList;
    private int frameNum;
    private Random rand = new Random();
    
    public WriteTest(ArrayList<String[]> wordsList, int score, int totalNumOfQuest, int numOfWrite) {
        this.wordsList = wordsList;
        this.score = score;
        this.totalNumOfQuest = totalNumOfQuest;
        this.numOfWrite = numOfWrite;
        initComponents();
        if(numOfWrite != 0){
            getWordsForWrite();
            placeQuestion();
            continueButton.setEnabled(false);
        }   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        userAnswerTextArea = new javax.swing.JTextArea();
        questionButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        continueButton = new javax.swing.JButton();
        checkButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        userAnswerTextArea.setColumns(10);
        userAnswerTextArea.setLineWrap(true);
        userAnswerTextArea.setRows(5);
        jScrollPane1.setViewportView(userAnswerTextArea);

        questionButton.setText("jButton1");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Test Mode");

        continueButton.setText("Continue");
        continueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continueButtonActionPerformed(evt);
            }
        });

        checkButton.setText("Check");
        checkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 69, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(checkButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(continueButton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                            .addComponent(questionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(66, 66, 66))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(questionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(continueButton)
                    .addComponent(checkButton))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void continueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continueButtonActionPerformed
        // TODO add your handling code here:
        frameNum --;
        if(frameNum >= 0){
            userAnswerTextArea.setBackground(null);
            userAnswerTextArea.setText("");
            placeQuestion();
            continueButton.setEnabled(false);
        }else{
            this.dispose();
            new ScoreScreen(score, totalNumOfQuest).setVisible(true);
        }                
    }//GEN-LAST:event_continueButtonActionPerformed

    private void checkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkButtonActionPerformed
        // TODO add your handling code here:
        if(userAnswerTextArea.getText().trim().equals(writeWordsList[frameNum][1]) && !isTextAreaColoured(userAnswerTextArea)){
            userAnswerTextArea.setBackground(Color.GREEN);
            score++;
        }else if(!isTextAreaColoured(userAnswerTextArea)){
            userAnswerTextArea.setBackground(Color.RED);
        }
        continueButton.setEnabled(true);
    }//GEN-LAST:event_checkButtonActionPerformed

    private void getWordsForWrite(){
        writeWordsList = new String[numOfWrite][2];
        for(int i=0; i<numOfWrite; i++){
            String[] word = getRandomWord();
            writeWordsList[i] = word;
        }
        this.writeWordsList = writeWordsList;
        this.frameNum = writeWordsList.length-1;
        writeWordsList = randomizeWriteWordsList(writeWordsList);
    }  
    
    private String[] getRandomWord(){
        int randNum = rand.nextInt(wordsList.size());
        String[] theWord = wordsList.get(randNum);
        wordsList.remove(randNum);
        return theWord;
    } 

    // Gets a random number (either 0 or 1)
    // If random number is 0, that index of the list does not change
    // If random number is 1, the word and definition values (stored in an array inside the main list) at that index changes
    private String[][] randomizeWriteWordsList(String[][] listToRandomize){
        for (String[] writeWordsList1 : writeWordsList) {
            int randChoiceNum = rand.nextInt(2);
            if (randChoiceNum == 1) {
                String temp = writeWordsList1[0];
                writeWordsList1[0] = writeWordsList1[1];
                writeWordsList1[1] = temp;
            }
        }
        return writeWordsList;
    }
    
    private void placeQuestion(){
        questionButton.setText(writeWordsList[frameNum][0]);
    }
    
    private Boolean isTextAreaColoured(JTextArea textArea){
        Color textAreaColour = textArea.getBackground();
        if(textAreaColour == Color.RED || textAreaColour == Color.GREEN){
            return true;
        }else{
            return false;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WriteTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WriteTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WriteTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WriteTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new writeTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkButton;
    private javax.swing.JButton continueButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton questionButton;
    private javax.swing.JTextArea userAnswerTextArea;
    // End of variables declaration//GEN-END:variables
}
